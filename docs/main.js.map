{"version":3,"sources":["./apps/mixcore-portal/$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./apps/mixcore-portal/src/app/app-shell/app-routing.module.ts","./apps/mixcore-portal/src/app/app-shell/app.component.ts","./apps/mixcore-portal/src/app/app-shell/app.module.ts","./apps/mixcore-portal/src/environments/environment.ts","./apps/mixcore-portal/src/main.ts"],"names":[],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,0C;;;;;;;;;;;;;;;ACVO,MAAM,UAAU,GAAY;IACjC;QACE,IAAI,EAAE,EAAE;QACR,YAAY,EAAE,GAAG,EAAE,CACjB,qNAAiD,CAAC,IAAI,CACpD,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,eAAe,CACzB;KACJ;CACF,CAAC;;;;;;;;;;;;;;;;;;;;ACJK,MAAM,YAAY;;wEAAZ,YAAY;0GAAZ,YAAY;QAFZ,2EAA+B;;;;;;;;;;;;;;;;;;;;;;;ACHc;AAEX;AACG;AAEH;AACgC;;;AAQxE,MAAM,SAAS;;kEAAT,SAAS;sGAAT,SAAS,cAFR,wDAAY;2GADb,EAAE,YADJ,CAAC,oEAAa,EAAE,iEAAoB,CAAC,2DAAU,CAAC,EAAE,yFAAuB,CAAC;mIAIxE,SAAS,mBALL,wDAAY,aACjB,oEAAa,EAAE,2DAAkC,yFAAuB;;;;;;;;;;;;;;;;ACXpF,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,sEAAsE;;;;;;;;;;;;;;;;;;ACfvB;AAGQ;AACE;AAEzD,IAAI,6EAAsB,EAAE;IAC1B,6DAAc,EAAE,CAAC;CAClB;AAED,wEAAwB;KACrB,eAAe,CAAC,gEAAS,CAAC;KAC1B,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 3105;\nmodule.exports = webpackEmptyAsyncContext;","import { Route } from '@angular/router';\n\nexport const APP_ROUTES: Route[] = [\n  {\n    path: '',\n    loadChildren: () =>\n      import('../modules/portal-cms/portal-cms.module').then(\n        (m) => m.PortalCMSModule\n      ),\n  },\n];\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'mix-root',\n  template: `<router-outlet></router-outlet>`,\n})\nexport class AppComponent {}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { APP_ROUTES } from './app-routing.module';\n\nimport { RouterModule } from '@angular/router';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, RouterModule.forRoot(APP_ROUTES), BrowserAnimationsModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app-shell/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n"],"sourceRoot":"webpack:///"}